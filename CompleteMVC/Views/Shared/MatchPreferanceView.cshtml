
@using CompleteMVC.ViewModel
@model MatchPreferanceVM

@section TitleSection{
    Required Match Preferance
}
@section HeaderSection{
    <style>
        .error {
            color: darkred;
        }

        .widthForm {
            width: 70%;
        }
    </style>
    <script>
        $(document).ready(function () {
           
            var CountryValue = $('#MatchCountry').val();
            if (CountryValue == "") {
                $('#trState').hide();
                $('#trCity').hide();
            }
            else {
                $('#trState').show();
            }

            var StateValue = $('#MatchState').val();
            if (StateValue == "") {
                $('#trCity').hide();
            }
            else {
                $('#trCity').show();
            }

            var ReligionValue = $('#MatchReligion').val();
            if (ReligionValue == "") {
                $('#trCaste').hide();
                $('#trSubcaste').hide();
            }
            else {
                $('#trCaste').show();
            }

            var CasteValue = $('#MatchCaste').val();
            if (CasteValue == "") {
                $('#trSubcaste').hide();
            }
            else {
                $('#trSubcaste').show();
            }
        });

        function GetStatesList(sourcecontrolname, destcontrolname, cityControlName, trStateName, trCityName) {
            var sourcecontolId = '#' + sourcecontrolname;
            var destControlId = '#' + destcontrolname;
            var cityControlId = '#' + cityControlName;
            var stateId = '#' + trStateName;
            var cityId = '#' + trCityName;

            var Id = $(sourcecontolId).val();
            if (Id == "") {
                var markupSate = "<option value=''>Select State...</option>";
                $(destControlId).html(markupSate).show();
                var markupCity = "<option value=''>Select City...</option>";
                $(cityControlId).html(markupCity).show();
                $('#trState').hide();
                $('#trCity').hide();
            }
            else {
                $('#trState').show();
            }
            $.ajax({
                url: '/UserRegistration/GetStates',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (states) {
                    $(destControlId).html(""); // clear before appending new list

                    var markup = "<option value=''>Select State...</option>";
                    for (var x = 0; x < states.length; x++) {
                        markup += "<option value=" + states[x].Value + ">" + states[x].Text + "</option>";
                    }
                    $(destControlId).html(markup).show();
                }
            });
        }

        function GetCitiesList(sourcecontrolname, destcontrolname, trCityName) {
            var sourcecontolId = '#' + sourcecontrolname;
            var destControlId = '#' + destcontrolname;
            var StateId = $(sourcecontolId).val();
            var trCityId = '#' + trCityName;

            if (StateId == "") {
                var markup = "<option value=''>Select City...</option>";
                $(destControlId).html(markup).show();
                $('#trCity').hide();
            }
            else {
                $('#trCity').show();
            }
            $.ajax({
                url: '/UserRegistration/GetCities',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{ 'Id':'" + StateId + "'}",
                success: function (cities) {
                    $(destControlId).html(""); // clear before appending new list

                    var markup = "<option value=''>Select City...</option>";
                    for (var x = 0; x < cities.length; x++) {

                        markup += "<option value=" + cities[x].Value + ">" + cities[x].Text + "</option>";

                    }
                    $(destControlId).html(markup).show();
                }
            });
        }

        function GetEducationField() {

            var Id = $('#MatchEducationClass').val();
            if (Id == "") {
                var markup = "<option value=''>Select Education Field...</option>";
                $("#MatchEducationField").html(markup).show();
            }
            $.ajax({
                url: '/UserRegistration/GetEducationFields',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (educationFields) {
                    $("#MatchEducationField").html(""); // clear before appending new list

                    var markup = "<option value=''>Select Education Field...</option>";
                    for (var x = 0; x < educationFields.length; x++) {
                        markup += "<option value=" + educationFields[x].Value + ">" + educationFields[x].Text + "</option>";
                    }
                    $("#MatchEducationField").html(markup).show();
                }
            });
        }

        $(document).ready(function () {

            var isVegetarianValue = $('#MatchFoodHabbit').val();

            if (isVegetarianValue == 1) {
                $('#trEggetarian').show();
            }
            else {
                $('#trEggetarian').hide();
            }

        });

        function EnableEggetarian() {

            var isVegetarianValue = $('#MatchFoodHabbit').val();

            if (isVegetarianValue == 1) {
                $('#trEggetarian').show();
            }
            else {
                $('#trEggetarian').hide();
            }
        }

        function GetCasteList() {

            var Id = $('#MatchReligion').val();
            if (Id == "") {
                var markupCaste = "<option value=''>Select Caste...</option>";
                $("#MatchCaste").html(markupCaste).show();
                var markupSubCaste = "<option value=''>Select SubCaste...</option>";
                $("#MatchSubCaste").html(markupSubCaste).show();
                $('#trCaste').hide();
                $('#trSubcaste').hide();
            }
            else {
                $('#trCaste').show();
            }
            $.ajax({
                url: '/UserRegistration/GetCastesList',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (castes) {
                    $("#MatchCaste").html(""); // clear before appending new list

                    var markup = "<option value=''>Select Caste...</option>";
                    for (var x = 0; x < castes.length; x++) {
                        markup += "<option value=" + castes[x].Value + ">" + castes[x].Text + "</option>";
                    }
                    $("#MatchCaste").html(markup).show();
                }
            });
        }
        function GetSubCasteList() {
           
            var Id = $('#MatchCaste').val();
            if (Id=="") {
                $("#trSubcaste").hide();
            }
            else {
                $("#trSubcaste").show();
            }
            $.ajax({
                url: '/UserRegistration/GetSubCastesList',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (subCastes) {
                    $("#MatchSubCaste").html(""); // clear before appending new list

                    var markup = "<option value=''>Select SubCaste...</option>";
                    for (var x = 0; x < subCastes.length; x++) {
                        markup += "<option value=" + subCastes[x].Value + ">" + subCastes[x].Text + "</option>";
                    }
                    $("#MatchSubCaste").html(markup).show();
                }
            });
        }

    </script>
}
@section ContentBody{
    @using (Html.BeginForm("UserMatchPreferance", "UserRegistration"))
    {
        <div class="form-horizontal">
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchHeightFitFrom, "Height From", new { @class = "control-label col-sm-2" })
                <div class="col-sm-2">
                    Fit:@Html.DropDownListFor(m => m.MatchHeightFitFrom, Enumerable.Range(1, 8).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                </div>
                <div class="col-sm-2">
                    Inch:@Html.DropDownListFor(m => m.MatchHeightInchFrom, Enumerable.Range(0, 12).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.MatchHeightFitTo, "Height Till", new { @class = "control-label col-sm-2" })
                <div class="col-sm-2">
                    Fit:@Html.DropDownListFor(m => m.MatchHeightFitTo, Enumerable.Range(1, 8).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                </div>
                <div class="col-sm-2">
                    Inch:@Html.DropDownListFor(m => m.MatchHeightInchTo, Enumerable.Range(0, 12).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchHeightFitFrom, "Age", new { @class = "control-label col-sm-2" })
                <div class="col-sm-2">
                    From:@Html.DropDownListFor(m => m.MatchAgeRangeFrom, Enumerable.Range(0, 60).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                </div>
                <div class="col-sm-2">
                    To:@Html.DropDownListFor(m => m.MatchAgeRangeTo, Enumerable.Range(0, 60).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                </div>
               
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchCountry, "Country", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchCountry, new SelectList(Model.listMatchCountry, "Key", "Value", 0), "Select...", new { @onchange = "GetStatesList('MatchCountry','MatchState', 'MatchCity','trState', 'trCity');", @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm" id="trState">
                @Html.LabelFor(m => m.MatchState, "State", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchState, new SelectList(ViewBag.LivingStateList, "Value", "Text"), "Select State...", new { @onchange = "GetCitiesList('MatchState', 'MatchCity', 'trCity');", @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm" id="trCity">
                @Html.LabelFor(m => m.MatchCity, "City", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchCity, new SelectList(ViewBag.LivingCityList, "Value", "Text"), "Select City...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchReligion, "Religion", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchReligion, new SelectList(Model.listMatchReligion, "Key", "Value", 0), "Select Religion...", new { @class = "form-control", @onchange = "GetCasteList();" })
                </div>
                @Html.LabelFor(m => m.GotraName, "Gotra Name", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.GotraName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm" id="trCaste">
                @Html.LabelFor(m => m.MatchCaste, "Caste", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchCaste, new SelectList(ViewBag.MatchCasteList, "Value", "Text"), "Select Caste...", new { @onchange = "GetSubCasteList();", @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm" id="trSubcaste">
                @Html.LabelFor(m => m.MatchSubCaste, "SubCaste", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchSubCaste, new SelectList(ViewBag.MatchSubCasteList, "Value", "Text"), "Select SubCaste...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.RashiId, "Rashi Name", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.RashiId, new SelectList(Model.listMatchRashi, "Key", "Value", 0), "Select Rashi...", new { @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.MatchManglikState, "Manglik", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchManglikState, new SelectList(Model.listMatchManglikStatus, "Key", "Value", 0), "Select...", new { @class = "form-control" })
                </div>
               
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchMarritalStatus, "Marrital Status", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchMarritalStatus, new SelectList(Model.listMarritalStatus, "Key", "Value", 0), "Select...", new { @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.MatchLanguage, "Language", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchLanguage, new SelectList(Model.listMatchLanguage, "Key", "Value", 0), "Select...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchEducationClass, "Education Class", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchEducationClass, new SelectList(Model.listMatchQualificationClass, "Key", "Value"), "Select Qualification...", new { @onchange = "GetEducationField();", @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.MatchEducationField, "Education Field", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchEducationField, new SelectList(ViewBag.EducationField, "Value", "Text"), "Select Education Field...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchJobField, "Job Field", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchJobField, new SelectList(Model.listMatchJobField, "Key", "Value", 1), "Select...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchFoodHabbit, "Food Habbit", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchFoodHabbit, new SelectList(Model.listMatchFoodHabbits, "key", "Value", 1), "Select Food Habbits...", new { @onchange = "EnableEggetarian();", @class = "form-control" })
                </div>

            </div>
            <div class="form-group widthForm" id="trEggetarian">
                @Html.LabelFor(m => m.MatchIsEggetarian, "Eggetarian", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchIsEggetarian, new SelectList(Model.listMatchHabbitsType, "Key", "Value", 0), "Select...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchIsSmoke, "Smoker", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchIsSmoke, new SelectList(Model.listMatchHabbitsType, "Key", "Value", 0), "Select...", new { @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.MatchIsDrink, "Drinker", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchIsDrink, new SelectList(Model.listMatchHabbitsType, "Key", "Value", 0), "Select...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchSkinComplexion, "Skin Complexion", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchSkinComplexion, new SelectList(Model.listMatchBodyColour, "Key", "Value"), "Select...", new { @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.MatchBodyType, "Body Type", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchBodyType, new SelectList(Model.listMatchBodyType, "Key", "Value"), "Select...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">

                @Html.LabelFor(m => m.MatchPD, "Physically Challenged", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.MatchPD, new SelectList(Model.listYesNo, "Key", "Value"), "Select...", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                @Html.LabelFor(m => m.MatchAboutPartner, "About Your Partner", new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextAreaFor(m => m.MatchAboutPartner, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group widthForm">
                <div class="col-sm-offset-2 col-sm-4 btn-group">
                    <input type="submit" id="MatchPreferance" name="MatchPreferance" value="Save and Next" class="btn btn-primary" />
                    <input type="submit" id="Skip" name="Skip" value="Skip For Later" class="btn btn-primary" />
                </div>
            </div>
        </div>

    }
}

