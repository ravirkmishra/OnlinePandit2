

@using CompleteMVC.ViewModel
@model UserEducationDetailsVM


@section TitleSection{
    Eduation and Carrer Section
}
@section HeaderSection{
    <style>
        /*table {
            border: 1px solid Black;
        }

        tr {
            border: 1px solid Black;
        }

        td {
            border: 1px solid Black;
        }

        th {
            border: 1px solid Black;
        }*/

        .error {
            color: darkred;
        }
    </style>

     <script>
       
        function GetStatesList() {
            
            var Id = $('#UserJobCountry').val();
            if (Id == "") {
                var markupState = "<option value=''>Select State...</option>";
                var markupCity = "<option value=''>Select City...</option>";
                $("#UserJobState").html(markupState); // clear before appending new list
                $("#UserJobCity").html(markupCity); // clear before appending new list
            }
            
            $.ajax({
                url: '/UserRegistration/GetStates',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (states) {
                    $("#UserJobState").html(""); // clear before appending new list
                   
                    var markup = "<option value=''>Select State...</option>";
                    for (var x = 0; x < states.length; x++) {
                        markup += "<option value=" + states[x].Value + ">" + states[x].Text + "</option>";
                    }
                    $("#UserJobState").html(markup).show();
                }
            });
        }

        function GetCitiesList() {
         
            var StateId = $('#UserJobState').val();
            if (StateId == "") {
                var markup = "<option value=''>Select City...</option>";
                $("#UserJobCity").html(markup); // clear before appending new list
            }
            $.ajax({
                url: '/UserRegistration/GetCities',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{ 'Id':'" + StateId + "'}",
                success: function (cities) {
                    $("#UserJobCity").html(""); // clear before appending new list
                  
                    var markup = "<option value=''>Select City...</option>";
                    for (var x = 0; x < cities.length; x++) {
                      
                        markup += "<option value=" + cities[x].Value + ">" + cities[x].Text + "</option>";
                     
                    }
                    $("#UserJobCity").html(markup).show();
                }
            });
        }


        function GetEducationField() {

            var Id = $('#UserMaxQualificationClass').val();
            if (Id == "") {
                var markup = "<option value=''>Select Education Field...</option>";
                $("#UserEducationField").html(markup).show();
            }
            $.ajax({
                url: '/UserRegistration/GetEducationFields',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (educationFields) {
                    $("#UserEducationField").html(""); // clear before appending new list

                    var markup = "<option value=''>Select Education Field...</option>";
                    for (var x = 0; x < educationFields.length; x++) {
                        markup += "<option value=" + educationFields[x].Value + ">" + educationFields[x].Text + "</option>";
                    }
                    $("#UserEducationField").html(markup).show();
                }
            });
        }
    </script>
}
@section ContentBody{
    @using (Html.BeginForm("UserEducationDetails", "UserRegistration", FormMethod.Post))
    {
        <div id="PhysicalDetailsDiv">
            <table>
                <tr>
                    @*<td colspan="2">
                            @Html.ValidationSummary(true, "", new { @class = "error" })
                        </td>*@
                </tr>
                <tr>
                    <td>Maximum Qualification:</td>
                    <td>
                        @Html.DropDownListFor(m => m.UserMaxQualificationClass, new SelectList(Model.listQualificationClass, "Key", "Value"), "Select Qualification...", new { @onchange = "GetEducationField();" })
                    </td>
                </tr>
                <tr>
                    <td>Education Field:</td>
                    <td>
                        @Html.DropDownListFor(m => m.UserEducationField, new SelectList(ViewBag.EducationField, "Value", "Text"), "Select Education Field...")
                    </td>
                </tr>
                <tr>
                    <td>
                        Institute Name:
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.UserEducationSchool)
                    </td>
                </tr>
                <tr>
                    <td>
                        Employment Status:
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.UserJobStatus, new List<SelectListItem>()
                       {
                            new SelectListItem() { Text="Employed",Value= "1"},
                            new SelectListItem() { Text = "Not Employed", Value="2"},
                       }, "Select...")
                    </td>
                </tr>
                <tr>
                    <td>
                        Company Name:
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.UserJobCompany)
                    </td>
                </tr>
                <tr>
                    <td>
                        Job Field:
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.UserJobField, new SelectList(Model.listJobField, "Key", "Value", 1), "Select...")
                    </td>
                </tr>
                <tr>
                    <td>
                        About Your Job:
                    </td>
                    <td>
                        @Html.TextAreaFor(m => m.UserJobDesc)
                    </td>
                </tr>
                <tr>
                    <td>
                        Job Designation:
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Designation)
                    </td>
                </tr>
                <tr>
                    <td>
                        Job Country:
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.UserJobCountry, new SelectList(Model.listCountry, "Key", "Value", 0), "Select...", new { @onchange = "GetStatesList();" })
                    </td>
                </tr>
                <tr>
                    <td>
                        Job State:
                    </td>
                    <td>
                        @*@Html.DropDownListFor(m => m.UserJobState, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "StateName"),
                            "Select State...", new { @onchange = "GetCitiesList();" })*@
                        @Html.DropDownListFor(m => m.UserJobState, new SelectList(ViewBag.StateList, "Value", "Text"), "Select State...", new { @onchange = "GetCitiesList();" })
                    </td>
                </tr>
                <tr>
                    <td>
                        Job City:
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.UserJobCity, new SelectList(ViewBag.CityList, "Value", "Text"), "Select City...")
                    </td>
                </tr>
                <tr>
                    <td>
                        Income per Annum:
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.UserIncomeId, new SelectList(Model.listUserIncome, "Key", "Value"), "Select Income...")
                    </td>
                </tr>
                <tr>
                    <td align="left" colspan="3">
                        <input type="submit" id="EducationDetails" name="EducationDetails" value="Save and Next" />
                        <input type="submit" id="Skip" name="Skip" value="Skip For Later" />
                    </td>
                </tr>
            </table>
        </div>
    }
}



