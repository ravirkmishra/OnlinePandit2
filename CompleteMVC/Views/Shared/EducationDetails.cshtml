

@using CompleteMVC.ViewModel
@model UserEducationDetailsVM


@section TitleSection{
    Eduation and Carrer Section
}
@section HeaderSection{
    <style>
        .error {
            color: darkred;
        }
    </style>

    <script>

        function GetStatesList() {

            var Id = $('#UserJobCountry').val();
            if (Id == "") {
                var markupState = "<option value=''>Select State...</option>";
                var markupCity = "<option value=''>Select City...</option>";
                $("#UserJobState").html(markupState); // clear before appending new list
                $("#UserJobCity").html(markupCity); // clear before appending new list
            }

            $.ajax({
                url: '/UserRegistration/GetStates',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (states) {
                    $("#UserJobState").html(""); // clear before appending new list

                    var markup = "<option value=''>Select State...</option>";
                    for (var x = 0; x < states.length; x++) {
                        markup += "<option value=" + states[x].Value + ">" + states[x].Text + "</option>";
                    }
                    $("#UserJobState").html(markup).show();
                }
            });
        }

        function GetCitiesList() {

            var StateId = $('#UserJobState').val();
            if (StateId == "") {
                var markup = "<option value=''>Select City...</option>";
                $("#UserJobCity").html(markup); // clear before appending new list
            }
            $.ajax({
                url: '/UserRegistration/GetCities',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{ 'Id':'" + StateId + "'}",
                success: function (cities) {
                    $("#UserJobCity").html(""); // clear before appending new list

                    var markup = "<option value=''>Select City...</option>";
                    for (var x = 0; x < cities.length; x++) {

                        markup += "<option value=" + cities[x].Value + ">" + cities[x].Text + "</option>";

                    }
                    $("#UserJobCity").html(markup).show();
                }
            });
        }


        function GetEducationField() {

            var Id = $('#UserMaxQualificationClass').val();
            if (Id == "") {
                var markup = "<option value=''>Select Education Field...</option>";
                $("#UserEducationField").html(markup).show();
            }
            $.ajax({
                url: '/UserRegistration/GetEducationFields',
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: "{'Id':'" + Id + "'}",
                success: function (educationFields) {
                    $("#UserEducationField").html(""); // clear before appending new list

                    var markup = "<option value=''>Select Education Field...</option>";
                    for (var x = 0; x < educationFields.length; x++) {
                        markup += "<option value=" + educationFields[x].Value + ">" + educationFields[x].Text + "</option>";
                    }
                    $("#UserEducationField").html(markup).show();
                }
            });
        }
    </script>
}
@section ContentBody{
    @using (Html.BeginForm("UserEducationDetails", "UserRegistration", FormMethod.Post, new { @class = "form-horizontal" }))
    {

        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserMaxQualificationClass, "Maximum Qualification", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserMaxQualificationClass, new SelectList(Model.listQualificationClass, "Key", "Value"), "Select Qualification...", new { @onchange = "GetEducationField();", @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserEducationField, "Education Field", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserEducationField, new SelectList(ViewBag.EducationField, "Value", "Text"), "Select Education Field...", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserEducationSchool, "Institute Name", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.UserEducationSchool, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobStatus, "Employement Status", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserJobStatus, new List<SelectListItem>()
                       {
                            new SelectListItem() { Text="Employed",Value= "1"},
                            new SelectListItem() { Text = "Not Employed", Value="2"},
                       }, "Select...", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobCompany, "Company Name", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.UserJobCompany, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobField, "Job Field", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserJobField, new SelectList(Model.listJobField, "Key", "Value", 1), "Select...", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobDesc, "About Job", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.TextAreaFor(m => m.UserJobDesc, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.Designation, "Designation", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.Designation)
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobCountry, "Job Country", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserJobCountry, new SelectList(Model.listCountry, "Key", "Value", 0), "Select...", new { @onchange = "GetStatesList();", @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobState, "Job State", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserJobState, new SelectList(ViewBag.StateList, "Value", "Text"), "Select State...", new { @onchange = "GetCitiesList();", @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobCity, "Job City", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserJobCity, new SelectList(ViewBag.CityList, "Value", "Text"), "Select City...", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group widthForm">
            @Html.LabelFor(m => m.UserJobCity, "Income", new { @class = "form-control" })
            <div class="col-sm-6">
                @Html.DropDownListFor(m => m.UserIncomeId, new SelectList(Model.listUserIncome, "Key", "Value"), "Select Income...", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-6">
                <input type="submit" id="EducationDetails" name="EducationDetails" value="Save and Next" class="btn btn-default" />
                <input type="submit" id="Skip" name="Skip" value="Skip For Later" class="btn btn-default" />
            </div>
        </div>

    }
}



